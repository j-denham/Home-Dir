-- Lecture 8 --

Regular Expressions are purely a notation for languages

Regular Expression Semantics:
  - Regexps can be a union, concatenation, or kleene star of any number of symbols
  - L(a) = {a}
  - L(epsilon) = {epsilon}
  - L(EMPTYSET) = EMPTYSET
  - L(R1 u R2) = L(R1) u L(R2)
  - L(R1 R2) = L(R1) . L(R2)
  - L(R*) = L(R)*
See slide 4 of first part for some examples

A language is regular iff L can be described a regular expression 
See slides 6 and 7 for an example of converting a regular expression into an DFA. Keep in mind that this example
isn't the most effective/minimal NFA model

Regular Expression Laws:
  - A u A = A
  - A u B = B u A
  - (A u B) u C = A u (B u C)
  - (A B) C = A (B C) = A B C
  - EMPTYSET u A = A u EMPTYSET = A
  - epsilon A = A epsilon = A
  - EMPTYSET A = A EMPTYSET = EMPTYSET
  - (A u B) C = A C u B C
  - A (B u C) = A B u A C
  - (A*)* = A*
  - EMPTYSET* = epsilon* = epsilon
  - (epsilon u A)* = A*
  - (A u B)* = (A*B*)*


